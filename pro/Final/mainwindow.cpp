#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QColor>
#include <cmath>
#include <QFileDialog>
#include <QTextStream>

#include <iostream>
using namespace std;

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    m_curve = new Curve;
    m_sinPanel = new sinPanel;
    m_cwPanel = new cwPanel;
    m_lfmPanel = new lfmPanel;
    m_hfmPanel = new hfmPanel;
    m_noisePanel = new noisePanel;
    m_customPanel = new customPanel;

    QVBoxLayout *layout = new QVBoxLayout;
    layout->maximumSize();
    layout->addWidget(m_curve);
    ui->curveWidget->setLayout(layout);

    m_stackedWidget = new QStackedWidget;
    m_stackedWidget->addWidget(m_sinPanel);
    m_stackedWidget->addWidget(m_cwPanel);
    m_stackedWidget->addWidget(m_lfmPanel);
    m_stackedWidget->addWidget(m_hfmPanel);
    m_stackedWidget->addWidget(m_noisePanel);
    m_stackedWidget->addWidget(m_customPanel);

    QVBoxLayout *layout1 = new QVBoxLayout;
    layout1->maximumSize();
    layout1->addWidget(m_stackedWidget);
    ui->parameterPanelWidget->setLayout(layout1);

    m_createActions();
    m_createToolbars();

    ui->outputButton->setIcon(QIcon("/images/outputOff.png"));
    ui->logoLabel->setPixmap(QPixmap("/images/ss.png").scaled(ui->logoLabel->size().width(),ui->logoLabel->size().height()));

    m_output = 0;
    m_form = 1;
    m_length = 600;
    m_data = new int[m_length];
    m_doubleData = new double[m_length];
    m_dataGenerate(0);

    connect(this->m_sinPanel,SIGNAL(parametersChanged()),this,SLOT(valueChanged()));
    connect(this,SIGNAL(parameterChanged(int,int*)),this->m_curve,SLOT(setParameters(int,int*)));
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::m_createActions()
{
    m_openAction = new QAction(tr("&Open"),this);
    m_openAction->setIcon(QIcon("/images/open.png"));
    m_openAction->setToolTip(tr("Open a waveform file generated by MATLAB"));
    connect(m_openAction,SIGNAL(triggered()),this,SLOT(openFile()));

    m_sinAction = new QAction(tr("&Sin"),this);
    m_sinAction->setIcon(QIcon("/images/sin.png"));
    m_sinAction->setToolTip(tr("Sine Wavefome"));
    connect(m_sinAction,SIGNAL(triggered()),this,SLOT(sinSelected()));

    m_cwAction = new QAction(tr("C&W"),this);
    m_cwAction->setIcon(QIcon("/images/cw.png"));
    m_cwAction->setToolTip(tr("CW Pulse"));
    connect(m_cwAction,SIGNAL(triggered()),this,SLOT(cwSelected()));

    m_lfmAction = new QAction(tr("&LFM"),this);
    m_lfmAction->setIcon(QIcon("/images/lfm.png"));
    m_lfmAction->setToolTip(tr("LFM Wavefome"));
    connect(m_lfmAction,SIGNAL(triggered()),this,SLOT(lfmSelected()));

    m_hfmAction = new QAction(tr("&HFM"),this);
    m_hfmAction->setIcon(QIcon("/images/hfm.png"));
    m_hfmAction->setToolTip(tr("HFM Wavefome"));
    connect(m_hfmAction,SIGNAL(triggered()),this,SLOT(hfmSelected()));

    m_noiseAction = new QAction(tr("&Noise"),this);
    m_noiseAction->setIcon(QIcon("/images/noise.png"));
    m_noiseAction->setToolTip(tr("Noise"));
    connect(m_noiseAction,SIGNAL(triggered()),this,SLOT(noiseSelected()));

    m_customAction = new QAction(tr("&Custom"),this);
    m_customAction->setIcon(QIcon("/images/custom.png"));
    m_customAction->setToolTip(tr("Custom Wavefome"));
    connect(m_customAction,SIGNAL(triggered()),this,SLOT(customSelected()));
}

void MainWindow::m_createToolbars()
{
    ui->mainToolBar->addAction(m_openAction);
    ui->mainToolBar->addAction(" ");
    ui->mainToolBar->addAction(m_sinAction);
    ui->mainToolBar->addAction(m_cwAction);
    ui->mainToolBar->addAction(m_lfmAction);
    ui->mainToolBar->addAction(m_hfmAction);
    ui->mainToolBar->addAction(m_noiseAction);
    ui->mainToolBar->addAction(m_customAction);
}

int MainWindow::openFile()
{

    fileName = QFileDialog::getOpenFileName(this,tr("Select a waveform file generated by MATLAB")
                                                    ,".",tr("MATLAB Data files(*.*)"));
    if(fileName.isEmpty())
        return -1;
    else
    {
        m_loadFile(fileName);
        ui->statusBar->showMessage("File " + fileName + " loaded" , 2000);
        m_customPanel->setPathText("The waveform file you have loaded is :\n\n" + fileName);
        m_form = 6;
    }

    return 0;
}

void MainWindow::m_loadFile(QString fileName)
{
    QFile file(fileName);
    file.open(QIODevice::ReadOnly);
    QTextStream *in;
    in = new QTextStream(&file);
    delete m_doubleData;
    delete m_data;
    int tempLength = 0;

    while(!in->atEnd())
    {
        in->readLine();
        tempLength ++;
    }
    m_doubleData = new double[tempLength];
    m_data = new int[tempLength];

    delete in;
    file.close();

    file.open(QIODevice::ReadOnly);
    in = new QTextStream(&file);

    for(int i = 0; i < tempLength; i++)
    {
        m_doubleData[i] = in->readLine().toDouble();
        m_data[i] = int(m_doubleData[i] * 50);
    }
    file.close();
}

void MainWindow::on_outputButton_clicked()
{
    m_output = !m_output;
    if(m_output)
    {
        ui->outputButton->setIcon(QIcon("/images/outputOn.png"));
    }
    else
    {
        ui->outputButton->setIcon(QIcon("/images/outputOff.png"));
    }

    m_dataGenerate(m_form);
}
\
void MainWindow::valueChanged()
{
    m_dataGenerate(m_form);
}

void MainWindow::m_dataGenerate(int form)
{
    if(m_output)
    {
        switch(form)
        {
        case 1:
            for(int i=0; i<m_length;i++)
                m_data[i]=int(m_sinPanel->getAmp() * sin(
                                  (m_sinPanel->getFreq())/1000*i +
                                  + m_sinPanel->getPhase()*3.1415926/180)
                              + m_sinPanel->getShift());
            break;
        case 2:
            break;
        case 3:
            break;
        case 4:
            break;
        case 5:
            for(int i=0; i<m_length;i++)
            {
                m_data[i]=int(rand()*200.0/RAND_MAX-100);
            }
            break;
        case 6:
            m_loadFile(fileName);
            break;
        }
    }
    else
        for(int i = 0; i<m_length; i++)
            m_data[i] = 0;
    emit parameterChanged(m_length, m_data);
}

void MainWindow::sinSelected()
{
    m_form = 1;
    m_stackedWidget->setCurrentIndex(0);
}

void MainWindow::cwSelected()
{
    m_form = 2;
    m_stackedWidget->setCurrentIndex(1);
}

void MainWindow::lfmSelected()
{
    m_form = 3;
    m_stackedWidget->setCurrentIndex(2);
}

void MainWindow::hfmSelected()
{
    m_form = 4;
    m_stackedWidget->setCurrentIndex(3);
}

void MainWindow::noiseSelected()
{
    m_form = 5;
    m_stackedWidget->setCurrentIndex(4);
}

void MainWindow::customSelected()
{
    m_form = 6;
    m_stackedWidget->setCurrentIndex(5);
}
